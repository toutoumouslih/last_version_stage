# Generated by Django 5.1.7 on 2025-04-18 00:33

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adm3_en', models.CharField(max_length=100, verbose_name='Commune Name')),
                ('adm3_pcode', models.CharField(max_length=10, verbose_name='Commune Code')),
                ('adm3_ref', models.CharField(blank=True, max_length=100, null=True, verbose_name='Commune Reference')),
                ('real_name', models.CharField(max_length=100, verbose_name='Real Name')),
                ('geo_json', models.JSONField(help_text='GeoJSON MultiPolygon format', verbose_name='Geometry Data')),
                ('date', models.DateField(verbose_name='Date of data')),
                ('valid_on', models.DateField(verbose_name='Valid from')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Valid to')),
                ('area_sqkm', models.FloatField(verbose_name='Area in km²')),
            ],
            options={
                'verbose_name': 'Commune',
                'verbose_name_plural': 'Communes',
                'ordering': ['adm3_en'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Mauritania', max_length=100, verbose_name='Country Name')),
                ('code', models.CharField(default='MR', max_length=10, verbose_name='Country Code')),
                ('geo_json', models.JSONField(default=dict, help_text='GeoJSON format for country boundaries', verbose_name='Geometry Data')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adm2_en', models.CharField(max_length=100, verbose_name='Department Name')),
                ('adm2_pcode', models.CharField(max_length=10, verbose_name='Department Code')),
                ('geo_json', models.JSONField(help_text='GeoJSON MultiPolygon format', verbose_name='Geometry Data')),
                ('date', models.DateField(verbose_name='Date of data')),
                ('valid_on', models.DateField(verbose_name='Valid from')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Valid to')),
                ('area_sqkm', models.FloatField(verbose_name='Area in km²')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['adm2_en'],
            },
        ),
        migrations.CreateModel(
            name='BoundaryPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)], verbose_name='Longitude')),
                ('latitude', models.FloatField(validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)], verbose_name='Latitude')),
                ('order', models.PositiveIntegerField(verbose_name='Point Order')),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boundary_points', to='myapp.commune')),
            ],
            options={
                'verbose_name': 'Boundary Point',
                'verbose_name_plural': 'Boundary Points',
                'ordering': ['commune', 'order'],
            },
        ),
        migrations.AddField(
            model_name='commune',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communes', to='myapp.department'),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adm0_en', models.CharField(max_length=100, verbose_name='Country Name')),
                ('adm0_pcode', models.CharField(max_length=10, verbose_name='Country Code')),
                ('adm1_en', models.CharField(max_length=100, verbose_name='Region Name')),
                ('adm1_pcode', models.CharField(max_length=10, verbose_name='Region Code')),
                ('geo_json', models.JSONField(help_text='GeoJSON MultiPolygon format', verbose_name='Geometry Data')),
                ('date', models.DateField(verbose_name='Date of data')),
                ('valid_on', models.DateField(verbose_name='Valid from')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Valid to')),
                ('area_sqkm', models.FloatField(verbose_name='Area in km²')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regions', to='myapp.country')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'ordering': ['adm1_en'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='myapp.region'),
        ),
    ]
